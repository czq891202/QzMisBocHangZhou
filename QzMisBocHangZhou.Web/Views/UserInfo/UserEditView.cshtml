@model QzMisBocHangZhou.Model.UserInfo
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>用户编辑</title>
    <meta http-equiv="X-UA-Compatible" content="text/html" charset="utf-8" />
    <meta name="viewport" content="width=device-width,minimum-scale=1.0,maximum-scale=1.0,initial-scale=1.0,user-scalable=no" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="renderer" content="webkit">

    <script type="text/javascript" src="~/Scripts/layuiadmin/layui/layui.js"></script>
    <link rel="stylesheet" media="all" href="~/Scripts/layuiadmin/layui/css/layui.css" />
    <link rel="stylesheet" media="all" href="~/Scripts/layuiadmin/style/admin.css" />
    @* 加载Vue *@
    <script src="~/Scripts/vue.min.js"></script>
    <script src="~/Scripts/axios.min.js"></script>
    <script src="~/Scripts/vue-treeselect.umd.min.js"></script>
    <script src="~/Scripts/vue.js"></script>
    <script src="~/Scripts/polyfill.min.js"></script>
    <link rel="stylesheet" media="all" href="~/Scripts/style/vue-treeselect.min.css" />
</head>
<body>
    <div class="layui-fluid">
        <div class="layui-card">
            <div class="layui-card-header">基本信息</div>
            <div id="app" class="layui-card-body" style="padding: 15px;">
                <form class="layui-form" lay-filter="component-form-group" action="">
                    @Html.HiddenFor(model => model.Id)
                    <div class="layui-form-item">
                        <label class="layui-form-label">账户名称</label>
                        <div class="layui-input-block">
                            <input type="text" name="UserName" value=@Model.UserName lay-verify="required" placeholder="请输入账户名称" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">账户密码</label>
                        <div class="layui-input-block">
                            <input type="text" name="Password" value=@Model.Password lay-verify="required" placeholder="请输入密码" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">角色权限</label>
                        <div class="layui-input-block" lay-filter="role-block-Filter">
                            <select name="RoleId" id="RoleId" lay-filter="RoleIdFilter" lay-verify="required"></select>
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">人员姓名</label>
                        <div class="layui-input-block">
                            <input type="text" name="RealName" value=@Model.RealName lay-verify="required" placeholder="请输入人员名称" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">管辖机构</label>
                        <div class="layui-input-block" lay-filter="org-block-Filter">
                            <treeselect v-model="value" :multiple="true" :options="options" placeholder="请选择管辖机构" />
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">联系方式</label>
                        <div class="layui-input-block">
                            <input type="text" name="Mobile" value=@Model.Mobile lay-verify="Mobile" placeholder="请输入联系方式" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">是否禁用</label>
                        <div class="layui-input-block">
                            <input type="checkbox" name="Status" lay-skin="switch" lay-text="ON|OFF" value="1" @(Model.Status == 1 ? "checked" : "")>
                        </div>
                    </div>
                    <div class="layui-form-item layui-layout-admin">
                        <div class="layui-input-block">
                            <div class="layui-footer" style="left: 0;">
                                <button class="layui-btn" lay-submit="" lay-filter="component-form-submit">提交</button>
                                <button type="reset" id="btn_reset" class="layui-btn layui-btn-primary">重置</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <script>
        layui.config({
            base: '../../Scripts/layuiadmin/' //静态资源所在路径
        }).extend({
            index: 'lib/index', //主入口模块
            }).use(['index', 'form', 'layer'], function () {
                var $ = layui.$
                    , layer = layui.layer
                    , index = parent.layer.getFrameIndex(window.name)
                    , form = layui.form;

            form.render(null, 'component-form-group');

            //角色下拉框绑定
            var roleloadingIndex = layer.load(2);
            $.ajax({
                url: '/Role/GetRoleInfoList',
                type: 'post',
                contentType: 'application/json',
                dataType: "json",
                success: function (result) {
                    //往下拉菜单里添加元素
                    //layer.alert(JSON.stringify(result));
                    $.each(result.data, function (index, item) {
                        $('#RoleId').append(new Option(item.RoleName, item.Id));
                    });
                    form.render('select');
                    form.val('component-form-group', {'RoleId' : '@Model.RoleId'});
                    layer.close(roleloadingIndex);
                },
                error: function (result) {
                    //console.log(result);
                    top.layer.msg('服务接口请求失败!', { time: 1000, shade: '0.3', shadeClose: false }, function () {
                        parent.layer.close(index);
                    });
                }
                });

            /* 监听提交 */
                form.on('submit(component-form-submit)', function (data) {
                   if (app._data.value.toString().length <= 0) {
                    top.layer.msg('请选择管辖机构', { time: 1000, shade: '0.3', shadeClose: true });
                    } else {
                        if (typeof (data.field.Id) == "undefined" || data.field.Id == '') {
                        $.ajax({
                            url: '/UserInfo/IsExistsUser',
                            type: 'post',
                            contentType: 'application/json',
                            dataType: "json",
                            data: JSON.stringify({ userName: data.field.UserName }),
                            success: function (result) {
                                if (result.data == true) {
                                    top.layer.alert('账号名称重复! 请更换一个！');
                                }
                                else {
                                    data.field.orgid = app._data.value.toString();
                                    submitAction(data);
                                }
                            },
                            error: function (result) {
                                top.layer.alert('服务接口请求失败!');
                            }
                        });
                    }
                    else {
                        data.field.orgid = app._data.value.toString();
                        submitAction(data);
                    }
                }
                return false;
            });

            //按钮组事件监听
            $('#btn_reset').click(function () {
                console.log('zTreeSelectM 当前选中的值名：', _zTreeSelectM.selected);
                console.log('zTreeSelectM 当前选中的值：', _zTreeSelectM.values);
            });

            var submitAction = function (data) {
                $.ajax({
                    url: '/UserInfo/Edit',
                    type: 'post',
                    contentType: 'application/json',
                    dataType: "json",
                    data: JSON.stringify(data.field),
                    success: function (result) {
                        if (result.msg == '') {
                            top.layer.msg('编辑成功!', { time: 1000, shade: '0.3', shadeClose: true }, function () {
                                parent.layer.closeAll();
                            });
                        }
                        else {
                            top.layer.msg('编辑失败! ' + result.msg, { time: 1000, shade: '0.3', shadeClose: true }, function () {
                                parent.layer.closeAll();
                            });
                        }
                    },
                    error: function (result) {
                        top.layer.msg('服务接口请求失败!', { time: 1000, shade: '0.3', shadeClose: true }, function () {
                            parent.layer.closeAll();
                        });
                    }
                });
            };
        });

        // register the component
        Vue.component('treeselect', VueTreeselect.Treeselect)
        var app = new Vue({
            el: '#app',
            data: {
                // define the default org
                value: ('@Model.OrgId'.length > 0 ? '@Model.OrgId'.split(',') : []),
                // define the default org
                parent: null,
                // define options
                options: []
            },
            mounted: function () {
                this.GetOrgTree();
            },
            watch: {
                //"value":"valueChange"
            },
            methods: {
                GetOrgTree: function () {
                    var orgTree = this;
                    axios.get('/OrgInfo/GetOrgTree').then(function (response) {
                        orgTree.options = response.data;
                    })
                },
                valueChange: function (val) {
                },
            }
        });
    </script>
</body>
</html>
