@model QzMisBocHangZhou.Model.OrgInfo
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>机构编辑</title>
    <meta http-equiv="X-UA-Compatible" content="text/html" charset="utf-8" />
    <meta name="viewport" content="width=device-width,minimum-scale=1.0,maximum-scale=1.0,initial-scale=1.0,user-scalable=no" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="renderer" content="webkit">

    <script type="text/javascript" src="~/Scripts/layuiadmin/layui/layui.js"></script>
    <link rel="stylesheet" media="all" href="~/Scripts/layuiadmin/layui/css/layui.css" />
    <link rel="stylesheet" media="all" href="~/Scripts/layuiadmin/style/admin.css" />

    @* 加载Vue *@
    <script src="~/Scripts/vue.min.js"></script>
    <script src="~/Scripts/axios.min.js"></script>
    <script src="~/Scripts/vue-treeselect.umd.min.js"></script>
    <script src="~/Scripts/vue.js"></script>
    <script src="~/Scripts/polyfill.min.js"></script>
    <link rel="stylesheet" media="all" href="~/Scripts/style/vue-treeselect.min.css" />
</head>
<body>
    <div class="layui-fluid">
        <div class="layui-card">
            <div class="layui-card-header">基本信息</div>
            <div class="layui-card-body" style="padding: 15px;">
                <form class="layui-form" lay-filter="component-form-group" action="">
                    @Html.HiddenFor(model => model.Id)
                    @*@Html.HiddenFor(model => model.ParentId)*@
                    <div class="layui-form-item">
                        <label class="layui-form-label">机构名称</label>
                        <div class="layui-input-block">
                            <input type="text" name="Name" value=@Model.Name lay-verify="required" placeholder="请输入机构名称" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">机构简称</label>
                        <div class="layui-input-block">
                            <input type="text" name="ShortName" value=@Model.ShortName lay-verify="required" placeholder="请输入机构简称" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">机构编号</label>
                        <div class="layui-input-block">
                            <input type="text" name="Code" value=@Model.Code lay-verify="required" placeholder="请输入机构编号" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">机构类型</label>
                        <div class="layui-input-block">
                            <select name="TypeName" id="TypeName" lay-filter="TypeName" lay-verify="required">
                                <option value=""></option>
                                <option value="一级分行" disabled>一级分行</option>
                                <option value="二级分行">二级分行</option>
                                <option value="一级支行">一级支行</option>
                                <option value="网点">网点</option>
                            </select>
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">上级机构</label>
                        <div id="app" class="layui-input-block">
                            <treeselect v-model="value" :multiple="false" :options="options" placeholder="请选择组织" />
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">联系方式</label>
                        <div class="layui-input-block">
                            <input type="text" name="Contact" value=@Model.Contact placeholder="联系方式" autocomplete="off" class="layui-input">
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">是否禁用</label>
                        <div class="layui-input-block">
                            <input type="checkbox" name="IsLock" lay-filter="component-form-IsLock" lay-skin="switch" lay-text="ON|OFF" value="1" @(Model.IsLock == 1 ? "checked" : "")>
                        </div>
                    </div>
                    <div class="layui-form-item layui-form-text">
                        <label class="layui-form-label">备注说明</label>
                        <div class="layui-input-block">
                            <textarea name="Remark" placeholder="请输入内容" class="layui-textarea">@Model.Remark</textarea>
                        </div>
                    </div>
                    <div class="layui-form-item layui-layout-admin">
                        <div class="layui-input-block">
                            <div class="layui-footer" style="left: 0;">
                                <button class="layui-btn" lay-submit="" lay-filter="component-form-submit">提交</button>
                                <button type="reset" class="layui-btn layui-btn-primary">重置</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <script>
        layui.config({
            base: '../../Scripts/layuiadmin/' //静态资源所在路径
        }).extend({
            index: 'lib/index' //主入口模块
        }).use(['index', 'form', 'layer'], function () {
            var $ = layui.$
                , admin = layui.admin
                , element = layui.element
                , layer = layui.layer
                , index = parent.layer.getFrameIndex(window.name)
                , form = layui.form;

            form.render(null, 'component-form-group');

            form.val('component-form-group', {'TypeName' : '@Model.TypeName'});

            /* 监听提交 */
            form.on('submit(component-form-submit)', function (data) {
                if (app._data.value == null || app._data.value == "") {
                    top.layer.msg('请选择上级机构', { time: 1000, shade: '0.3', shadeClose: true });
                } else {
                    data.field.ParentId = app._data.value;
                    $.ajax({
                        url: '/OrgInfo/Edit',
                        type: 'post',
                        contentType: 'application/json',
                        dataType: "json",
                        data: JSON.stringify(data.field),
                        success: function (result) {
                            //console.log(result);
                            if (result.msg == '') {
                                top.layer.msg('更新成功!', { time: 1000, shade: '0.3', shadeClose: true }, function () {
                                    parent.layer.closeAll();
                                });
                            }
                            else {
                                top.layer.msg('更新失败! ' + result.msg, { time: 1000, shade: '0.3', shadeClose: true }, function () {
                                    parent.layer.closeAll();
                                });
                            }
                        },
                        error: function (result) {
                            //console.log(result);
                            top.layer.msg('服务接口请求失败!', { time: 1000, shade: '0.3', shadeClose: true }, function () {
                                parent.layer.closeAll();
                            });
                        }
                    });
                }
                return false;
            });
        });

        // register the component
        Vue.component('treeselect', VueTreeselect.Treeselect)
        var app = new Vue({
            el: '#app',
            data: {
                // define the default value
                value: '@Model.ParentId',
                // define options
                options: []
            },
            mounted: function () {
                this.GetOrgTree();
            },
            watch: {
                //"value":"valueChange"
            },
            methods: {
                GetOrgTree: function () {
                    var orgTree = this;
                    axios.get('/OrgInfo/GetOrgTree').then(function (response) {
                        orgTree.options = response.data;
                    })
                }
            }
        });
    </script>
</body>
</html>
